name: Build Front

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Check Node v
        run: node -v

      - name: Build front
        run: |
          npm install
          npm build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get image tag(verion)
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demo-frontend
          IMAGE_TAG: ${{ steps.image.outputs.version }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG



      # - name: Get verion
      #   id: image
      #   run: |
      #     VERSION=$(echo ${{ github.sha }} | cut -c1-8)
      #     echo VERSION=$VERSION
      #     echo "::set-output name=version::$VERSION"
      
      # # kustomize 명령을 가져온다.
      # - name: Setup Kustomize
      #   uses: imranismail/setup-kustomize@v1

      # - name: Checkout kustomize repository
      #   uses: actions/checkout@v2
      #   with:
      #     # kubernetes 설정정보 저장소
      #     repository: jinseo-jang/eks-workshop-manifest
      #     ref: dev
      #     # 다른 저장소에 push 하려면 Personal Access Token이 필요.
      #     token: ${{ secrets.ACTION_TOKEN }}
      #     path: example-app-kustomize
      # # 새 이미지 버전으로 파일 수정
      # - name: Update Kubernetes resources
      #   run: |
      #     cd example-app-kustomize/overlays/dev/
      #     kustomize edit set image ${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
      #     cat kustomization.yaml
          
      # # 수정된 파일 commit & push
      # - name: Commit files
      #   run: |
      #     cd example-app-kustomize
      #     git config --global user.email "github-actions@github.com"
      #     git config --global user.name "github-actions"
      #     git commit -am "Update image tag"
      #     git push -u origin dev